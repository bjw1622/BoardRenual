
@{
    ViewBag.Title = "Index";
    int boardCount = 20;
    int totalPage = (Model.Count / boardCount) + 2;
}

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
</head>
<body>
    <h2>게시판</h2>
    <hr />
    <div>
        <select class="form-select" id="board-count" onchange="changePaging()">
            <option value="20">20</option>
            <option value="30">30</option>
            <option value="40">40</option>
            <option value="50">50</option>
        </select>
        <select class="form-select" id="find-value">
            <option value="Name">작성자</option>
            <option value="Title">제목</option>
        </select>
        <input type="text" id="find" />
        <button id="find-board">검색</button>
    </div>
    <table class="table">
        <thead>
            <tr>
                <th class="text-center" scope="col">#</th>
                <th class="text-center" scope="col">제목</th>
                <th class="text-center" scope="col">작성자</th> 
                <th class="text-center" scope="col">댓글</th>
                <th class="text-center" scope="col">추천</th>
            </tr>
        </thead>
        <tbody id="tbody">
            @if (Model.Count < boardCount)
            {
                for (var i = 0; i < @ViewBag.Board.Count; i++)
                {
                    <tr class="text-center">
                        <td class="text-center">@(i+1)</td>
                        <td class="text-center"><a href="/Board/Detail/@Model[i].No">@Model[i].Title</a></td>
                        <td class="text-center">@Model[i].Name</td>
                        <td class="text-center"></td>
                        <td class="text-center">@Model[i].RecommandCount</td>
                    </tr>
                }
            }
            else
            {
                for (var i = 0; i < boardCount; i++)
                {
                    <tr class="text-center">
                        <td class="text-center">@(i+1)</td>
                        <td class="text-center"><a href="/Board/Detail/@Model[i].No">@Model[i].Title</a></td>
                        <td class="text-center">@Model[i].Name</td>
                        <td class="text-center">@Model[i].ReplyCount</td>
                        <td class="text-center">@Model[i].RecommandCount</td>
                    </tr>
                }
            }
        </tbody>
    </table>
    <div id="page" style="text-align: center;">
        @for (var i = 1; i < totalPage; i++)
        {
            if (i == 1)
            {
                <button class=" page-btn btn btn-light btn-info" onclick="paging()" value=@i>@i</button>
            }
            else
            {
                <button class="page-btn btn btn-light" onclick="paging()" value=@i>@i</button>
            }
        }
    </div>
    <button class="btn btn-primary" onclick="location.href='/Board/Write'">글쓰기</button>
    <script>
    // 페이징 나타내기
        function changePaging() {
            $('#page').empty();
        let totalPageCount = @(Model.Count);
        for (let i = 1; i < (totalPageCount / document.querySelector('#board-count').value)+1; i++)
        {
            if (i === 1) {
                $('#page').append(` <button class="page-btn btn btn-light btn-info" onclick="paging()" value=${i} >${i}</button>`);
            }
            else {
                $('#page').append(` <button class="page-btn btn btn-light" onclick="paging()" value=${i} >${i}</button>`);
            }
        }
        init();
        const param = {
            PageNumber: 1,
            PageCount: $('#board-count').val(),
        }
        $.ajax({
            url: '/Board/IndexPaging/',
            type: 'get',
            dataType: "json",
            data: param,
            contentType: "application/json",
            success: function (data) {
                if (data.Paging !== -1) {
                    $('#tbody').empty();
                    if (data.Paging !== "") {
                        data.Paging.forEach((item, val) => {
                            $('#tbody').append(createRow(item, val, param.PageNumber, param.PageCount))

                        })
                    }
                }
            },
            error: function () {
            }
        });
        }
    @*document.querySelector('#board-count').addEventListener('click', () => {
        $('#page').empty();
        let totalPageCount = @(Model.Count);
        for (let i = 1; i < (totalPageCount / document.querySelector('#board-count').value)+1; i++)
        {
            if (i === 1) {
                $('#page').append(` <button class="page-btn btn btn-light btn-info" onclick="paging()" value=${i} >${i}</button>`);
            }
            else {
                $('#page').append(` <button class="page-btn btn btn-light" onclick="paging()" value=${i} >${i}</button>`);
            }
        }
        init();
        const param = {
            PageNumber: 1,
            PageCount: $('#board-count').val(),
        }
        $.ajax({
            url: '/Board/IndexPaging/',
            type: 'get',
            dataType: "json",
            data: param,
            contentType: "application/json",
            success: function (data) {
                if (data.Paging !== -1) {
                    $('#tbody').empty();
                    if (data.Paging !== "") {
                        data.Paging.forEach((item, val) => {
                            $('#tbody').append(createRow(item, val, param.PageNumber, param.PageCount))

                        })
                    }
                }
            },
            error: function () {
            }
        });
    })*@
    // 검색 조건 없을 때 페이징
    function paging() {
        const param = {
            PageNumber: event.target.value,
            PageCount: $('#board-count').val()
        }
        $.ajax({
            url: '/Board/IndexPaging/',
            type: 'get',
            dataType: "json",
            data: param,
            contentType: "application/json",
            success: function (data) {
                $('#tbody').empty();
                if (data.Paging !== "") {
                    data.Paging.forEach((item,val) => {
                        $('#tbody').append(createRow(item, val, param.PageNumber, param.PageCount))
                    })
                }
            },
            error: function () {
            }
        });
    }
    //검색 시 첫 화면  + 페이징 버튼 그리기
    document.querySelector('#find-board').addEventListener('click', () => {
        const param = {
            PageNumber: 1,
            PageCount: $('#board-count').val(),
            Variable: document.querySelector("#find-value").value,
            Input: $('#find').val(),
        }
        $.ajax({
            url: '/Board/PageAndFind',
            type: 'get',
            dataType: "json",
            data: param,
            contentType: "application/json",
            success: function (data) {
                if (data.Result !== 1 && data.Paging !== -1) {
                    $('#page').empty();
                    for (let i = 1; i < (data.Result / document.querySelector('#board-count').value) + 1; i++) {
                        if (i === 1) {
                            $('#page').append(` <button class="page-btn btn btn-light btn-info" onclick="findPaging()" value=${i} >${i}</button>`);
                        }
                        else {
                            $('#page').append(` <button class="page-btn btn btn-light" onclick="findPaging()" value=${i} >${i}</button>`);
                        }
                    }
                    init();
                    $('#tbody').empty();
                    if (data.Paging !== "") {
                        data.Paging.forEach((item, val) => {
                            $('#tbody').append(createRow(item, val, param.PageNumber, param.PageCount))
                        })
                    }
                }
                else {
                    alert('검색 내용을 입력해주세요.')
                }
            },
            error: function (request, status, error ) {
                alert("status : " + request.status + ", message : " + request.responseText + ", error : " + error);            }
        });
    })
    // 검색 조건 있을 때 페이징
    function findPaging() {
        const param = {
            PageNumber: event.target.value,
            PageCount: $('#board-count').val(),
            Variable: document.querySelector("#find-value").value,
            Input: $('#find').val(),
        }
        $.ajax({
            url: '/Board/PageAndFind',
            type: 'get',
            dataType: "json",
            data: param,
            contentType: "application/json",
            success: function (data) {
                $('#tbody').empty();
                if (data.Paging !== "") {
                    data.Paging.forEach((item, val) => {
                        $('#tbody').append(createRow(item, val, param.PageNumber, param.PageCount))
                    })
                }
            },
            error: function () {
            }
        });
    }
    function createRow(item,val,pageNumber,pageCount) {
        return `
        <tr class="text-center">
                    <td class="text-center">${(val + 1) + parseInt(pageNumber-1) * pageCount}</td>
                    <td class="text-center"><a href="/Board/Detail/${item.No}">${item.Title}</a></td>
                    <td class="text-center">${item.Name}</td>
                    <td class="text-center">${item.ReplyCount}</td>
                    <td class="text-center">${item.RecommandCount}</td>
                </tr>`
    }
    //페이징 버튼 색깔 변경
    const buttonClass = document.getElementsByClassName("page-btn");
    function handleClick(event) {
        for (var i = 0; i < buttonClass.length; i++) {
            buttonClass[i].classList.remove("btn-info");
        }
        event.target.classList.add("btn-info");
    }

    function init() {
        for (var i = 0; i < buttonClass.length; i++) {
            buttonClass[i].addEventListener("click", handleClick);
        }
    }
    init();
    </script>
</body>
</html>
